--avaScript Data Types:

JavaScript has 8 Datatypes:

String
Number
Bigint
Boolean
Undefined ...let car;  
Null ... let user = null;
Symbol

Object

--The Object Datatype:
The object data type can contain both built-in objects, and user defined objects:

Built-in object types can be:

objects, arrays, dates, maps, sets, intarrays, floatarrays, promises, and more.

Examples
// Numbers:
let length = 16;
let weight = 7.5;

// Strings:
let color = "Yellow";
let lastName = "Johnson";

// Booleans
let x = true;
let y = false;

// Object:
const person = {firstName:"John", lastName:"Doe"};

// Array object:
const cars = ["Saab", "Volvo", "BMW"];

// Date object:
const date = new Date("2022-03-25");

-- When adding a number and a string, JavaScript will treat the number as a string.

let x = 16 + "Volvo"; as let x = "16" + "Volvo";

--JavaScript evaluates expressions from left to right. Different sequences can produce different results:

let x = 16 + 4 + "Volvo"; gives "20Volvo"

let x = "Volvo" + 16 + 4; gives "Volvo164"

-- JavaScript Types are Dynamic
   JavaScript has dynamic types. This means that the same variable can be used to hold different data types.

let x;       // Now x is undefined
x = 5;       // Now x is a Number
x = "John";  // Now x is a String

--A string (or a text string) is a series of characters like "John Doe".

Strings are written with quotes. You can use single or double quotes.

// Using double quotes:
let carName1 = "Volvo XC60";

// Using single quotes:
let carName2 = 'Volvo XC60';

--You can use quotes inside a string, as long as they don't match the quotes surrounding the string:

// Single quote inside double quotes:
let answer1 = "It's alright";

// Single quotes inside double quotes:
let answer2 = "He is called 'Johnny'";

// Double quotes inside single quotes:
let answer3 = 'He is called "Johnny"';

-- JavaScript Numbers:

All JavaScript numbers are stored as decimal numbers (floating point).

Numbers can be written with, or without decimals:
Javascript numbers are always one type:
double (64-bit floating point).

// With decimals:
let x1 = 34.00;

// Without decimals:
let x2 = 34;

-- JavaScript Arrays
JavaScript arrays are written with square brackets.

Array items are separated by commas.

The following code declares (creates) an array called cars, containing three items (car names).

Example
const cars = ["Saab", "Volvo", "BMW"];

--JavaScript Objects
JavaScript objects are written with curly braces {}.

Object properties are written as name:value pairs, separated by commas.

Example
const person = {firstName:"John", lastName:"Doe", age:50, eyeColor:"blue"};



